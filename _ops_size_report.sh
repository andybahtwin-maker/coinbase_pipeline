set -euo pipefail
cd "${REPO_DIR:-$HOME/projects/coinbase_pipeline}"

OUT=report_repo_health.md
: > "$OUT"

echo "# Repo Health Report ($(date -Iseconds))" >> "$OUT"

echo "## Largest files (top 40)" >> "$OUT"
# human sizes, skip .git
(du -ah | grep -v '^./\.git' | sort -hr | head -40) >> "$OUT" 2>/dev/null || true

echo -e "\n## Python files by line count (top 40)" >> "$OUT"
# line counts
find . -name '*.py' -not -path './.venv/*' -not -path './.git/*' \
  -exec wc -l {} + | sort -nr | head -40 >> "$OUT"

echo -e "\n## Duplicate/similar script names" >> "$OUT"
# highlight multiple run/diag/push scripts
ls -1 | grep -E '^(run_|diag_|push_|enable_|install_|harden_|import_)' | sort | uniq -c >> "$OUT" || true

echo -e "\n## Orphaned __pycache__ & data dumps" >> "$OUT"
find . -type d -name '__pycache__' -prune -print
find . -maxdepth 2 -type d -name 'json' -print
find . -maxdepth 2 -type f -name '*.csv' -o -name '*.ndjson' -o -name '*.parquet' -print 2>/dev/null | sed 's/^/ - /' >> "$OUT" || true

echo -e "\n## Quick static checks (ruff+vulture)" >> "$OUT"
python3 -m pip install -q --upgrade pip ruff vulture >/dev/null 2>&1 || true
echo '### ruff summary' >> "$OUT"
ruff --quiet check . | sed -n '1,200p' >> "$OUT" || true
echo -e '\n### vulture (dead code suspects)' >> "$OUT"
vulture . | sed -n '1,200p' >> "$OUT" || true

echo -e "\n--\nGenerated by _ops_size_report.sh" >> "$OUT"
echo "Wrote $OUT"
